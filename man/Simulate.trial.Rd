% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Simulate.trial.R
\name{Simulate.trial}
\alias{Simulate.trial}
\title{Simulate response-adaptive trial}
\usage{
Simulate.trial(seed = 111, ArrivalData, ResponseData, Time.Delay = 8,
  Design = c(1, 1), Prior, p.historical = NULL, rand.vec = list(a = 1/(2 *
  10)^4, b = 4, c = 0.25, N.star = 0), stopping.rules, Check = c(Drop = TRUE,
  alloc = TRUE, resp.pr = TRUE, stat = TRUE, stat.all = FALSE, sim.initial =
  FALSE), DAM.check = c(1, 1, 1))
}
\arguments{
\item{seed}{Set seed in simulation.}

\item{ArrivalData}{A list of  arrival matrices usually generated with \code{arrival_process}, which 3 columns.
The 1th, 2th and 3th column indicate for each patients (one row par patient) the
arrival time, disease type and the subpopulation.}

\item{ResponseData}{A list of or  arraies of binary response variables for each combination of treatment/disease/subpopulation.
The array can be generated with \code{get.outcome}.}

\item{Time.Delay}{Time between treatment initiation and measurement of response outcome.}

\item{Design}{A vector of length 2 with specifies the experimental design of the trial.
For \code{Design[1] = 1, 2} the function simulates a Phase II subpopulation-finding or subpopulation-stratified design.
For \code{Design[2] = 1, 2, 3} specifise the presence of an (1) active, (2) historical control arm, and (3) the absence of a control arm.}

\item{Prior}{A list of prior parameter generated with \code{Prior.list.Fct}.}

\item{p.historical}{A matrix of  historical/null response probabilities by disease (rows) and subpopulations (columns).}

\item{rand.vec}{A list of randomization parameter to  compute the power function \eqn{h_{d,m}(N) = a_{d,m} N^b }. The elements are:
(1) \code{a} array of identical slopes for each experimental agents by disease and subpolulation.
(2) \code{b} The exponent \eqn{b}.
(3) \code{c} The exponent for the control arms.
(4) \code{N.star} The minimum number of patients to be randomized to each combination of arm/disease/subpopulation.}

\item{stopping.rules}{A list with names eleents \code{b.futil, shape.futi, b.effic, shape1.effic, shape2.effic, N.min}, where:
(1) \code{b.futil} is either a scalar of an array of stopping parameter for the futility boundary with shape parameter \code{shape.futi}
\code{b.futil * (1-shape.futi^N )} with  \code{N = Resp_RiskPop[d,a,m] } or   \code{N = sum(Resp_RiskPop[,a,m]) } for the SSD or SFD.
(2) \code{b.effic} is an array of stopping parameter for the efficacy boundary  \code{b.effic[d,m,a] * (1+shape1.effic * shape1.effic^N )}.
(3) N.min is the  minimum number of observed outcomes before the early stopping rule for efficacy can be applied.}

\item{Check}{Vector of length 6 with elements \code{TRUE} or  \code{FALSE}, where the 1th to 6th element indicate if
(i) the early stopping rules apply,
(2) patient allication during the course of the trial should be traced,
(3) empirical respons trobabilities during the course of the trial should be traced,
(4) The efficacy and futility statistics during the course of the trial should be traced,
(5) statistica for all agents/disease/subpopulation should be traced,
(6) the trial will be simulated only until the efficacy statistics applies the first time.}

\item{DAM.check}{An integer vector of length 3.
The first and second coordinate of DAM.check specify the subpopulation and agents for which the efficacy/futility statistics should be saved.
For the subpopulation-stratified model \code{Design[1]==2},
the 3th component specifies the disease for which the efficacy/futility statistics should be saved.
For the subpopulation-finding model \code{Design[1]==1}, the 3th component will not be used.}
}
\value{
A list of results for the trial.
}
\description{
Simulate Bayesian response-adaptive trials either as a subpopulation-finding or
subpolpulation-stratified design
}
\examples{
### Model:  2 Biomarker, 3 Cancer, 5 Agents (1 control + 4 experimental)

# (1) Simulate Arrival data
nr.data            = 10
rates.by.disease   = rbind(m1 = c(.5,  1,  1),  m2 = c(1, .5, .2))
mutants.by.disease = rbind(m1 = c( 200, 200, 200), m2 = c(200, 200, 200))
Arrival.data = arrival.process(nr.data, seed=1121, rates.by.disease, mutants.by.disease)

# (2) Simulate Response to treatment data
rate         = array(0, c(3, 5, 2))
rate[,,1]    = matrix(c(.1, .5, .3, .3, .2), 3, 5, byrow=TRUE)
rate[,,2]    = matrix(c(.2, .4, .3, .2, .2), 3, 5, byrow=TRUE)
ResponseData = get.outcome(seed = 1121, rate, Arrival.data)

# (3) Trial eligibility and stopping parameter
eligibility.array = array(1, c(3, 5, 2))
eligibility.no.con= eligibility.array
eligibility.no.con[,1,]=0
Dim               = dim(eligibility.array)

                                      E.N       = array(dim=dim(eligibility.array) -c(0,1,0))
for(m in 1:Dim[3]) for(d in 1:Dim[1]) E.N[d,,m] = mutants.by.disease[m,d]
                                      E.N[E.N==0] = Inf

rand.vec =list(a=1/(2*E.N)^4, b=4, c=0.25, N.star=20)


Prior.no.control = Prior.list.Fct(eligibility.array=eligibility.no.con,
                                  Var.vec = c(V1=0, V2=0, W1=.3, W2=.1, W3=.05))

Prior.control = Prior.list.Fct(eligibility.array=eligibility.array,
                                  Var.vec = c(V1=.1, V2=.1, W1=.3, W2=.1, W3=.05))


# (4) Stopping rules
stopping.rules = list(b.futil      = 0.05,
                      b.effic      = 2,
                      shape.futi   = 0,
                      shape1.effic = 3.5,
                      shape2.effic = 0.85,
                      N.min        = 5)

# (5) simulate a subpopulation finding trial without active-control
Sim = Simulate.trial(
       seed              = 111,
       ArrivalData       = Arrival.data,
       ResponseData      = ResponseData,
       Time.Delay        = 8,
       Design            = c(1,3),

       ## prior/randomization parameter
       Prior             = Prior.no.control,
       p.historical      = cbind(m1=c(.3, .3, .3), c(.3, .3, .3)),
       rand.vec          = rand.vec,

       ## stopping rules
       stopping.rules    = stopping.rules,

       # what to save as outpute
       Check             =c(drop        = TRUE,
                            alloc       = TRUE,
                            resp.pr     = TRUE,
                            stat        = TRUE,
                            stat.all    = TRUE,
                            sim.initial = FALSE),
       DAM.check          = c(1,1,1) )

# (5) simulate a subpopulation finding trial with active-control
Sim2 = Simulate.trial(
       seed              = 111,
       ArrivalData       = Arrival.data,
       ResponseData      = ResponseData,
       Time.Delay        = 8,
       Design            = c(2,1),

       ## prior/randomization parameter
       Prior             = Prior.control,
       p.historical      = NULL,
       rand.vec          = rand.vec,

       ## stopping rules
       stopping.rules    = stopping.rules,

       # what to save as outpute
       Check             =c(drop        = TRUE,
                            alloc       = TRUE,
                            resp.pr     = TRUE,
                            stat        = TRUE,
                            stat.all    = TRUE,
                            sim.initial = FALSE),
       DAM.check          = c(1,1,1) )
}
\author{
Steffen Ventz  \email{ventzer@yahoo.de}
}

